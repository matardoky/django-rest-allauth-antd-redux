{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/badge/style\";\nimport _Badge from \"antd/es/badge\";\nvar _jsxFileName = \"/home/diop/Documents/projetSante/src/containers/PasswordReset.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { authUrls } from '../Constants';\n\nclass PasswordReset extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notifSuccess: null,\n      notifFail: null,\n      error: false,\n      success: false\n    };\n\n    this.passwordReset = email => {\n      axios.post(authUrls.RESET_PASSWORD, {\n        email\n      }).then(res => {\n        this.setState({\n          notifSuccess: res.data,\n          success: true\n        });\n      }).catch(err => {\n        this.setState({\n          notifFail: err.response.message,\n          error: true\n        });\n      });\n    };\n\n    this.onFinish = value => {\n      this.passwordReset(value.email);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      id: \"passwordReset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"passwordReset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"R\\xE9initialiser le mot de passe de votre compte DokyDoc\"), /*#__PURE__*/React.createElement(_Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Badge, {\n      count: 1,\n      style: {\n        backgroundColor: '#001529'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }\n    }, \"Entrez votre adresse mail ci-dessous.\"))), /*#__PURE__*/React.createElement(_Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Badge, {\n      count: 2,\n      style: {\n        backgroundColor: '#001529'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }\n    }, \"Vous recevrez un mail.\"))), /*#__PURE__*/React.createElement(_Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Badge, {\n      count: 3,\n      style: {\n        backgroundColor: '#001529'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      span: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 28\n      }\n    }, \"Cliquez sur le lien dans le mail, vous pourrez choisir votre nouveau mot de passe.\"))), /*#__PURE__*/React.createElement(_Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Badge, {\n      count: 4,\n      style: {\n        backgroundColor: '#001529'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(_Col, {\n      span: 23,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }\n    }, \"Apr\\xE8s la validation de votre nouveau mot de passe, vous pouvez vous connecter !\"))), /*#__PURE__*/React.createElement(_Form, {\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Form.Item, {\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: \"Enter votre addresse e-mail de votre compte DokyDoc\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"Adresse e-mail de votre compte DokyDoc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(_Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      htmlType: \"submit\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, \"envoyer\"))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Je n\\u2019ai pas re\\xE7u de mail, pourquoi ?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \"La r\\xE9ception du mail peut se faire dans les minutes qui suivent, pensez \\xE9galement \\xE0 v\\xE9rifier vos spams. Si le probl\\xE8me persiste, merci de consulter notre FAQ.\")));\n  }\n\n}\n\nexport default PasswordReset;","map":{"version":3,"sources":["/home/diop/Documents/projetSante/src/containers/PasswordReset.jsx"],"names":["React","axios","authUrls","PasswordReset","Component","state","notifSuccess","notifFail","error","success","passwordReset","email","post","RESET_PASSWORD","then","res","setState","data","catch","err","response","message","onFinish","value","render","backgroundColor","required"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { authUrls } from '../Constants'\nimport { Form, Input, Button, Row, Col, Badge } from 'antd'\n\nclass PasswordReset extends React.Component {\n\n    state = {\n        notifSuccess: null, \n        notifFail: null,\n        error:false, \n        success: false\n    }\n\n    passwordReset = (email) => {\n        axios.post(authUrls.RESET_PASSWORD, {\n            email\n        })\n        .then( res => {\n            this.setState({\n                notifSuccess: res.data, \n                success:true\n            })\n        })\n        .catch( err => {\n            this.setState({\n                notifFail: err.response.message, \n                error: true\n            })\n        })\n\n    }\n\n    onFinish = (value) => {\n        this.passwordReset(value.email)\n    }\n    \n    render(){\n        return(\n            <main id=\"passwordReset\">\n                <div className=\"passwordReset\">\n                    <h1>Réinitialiser le mot de passe de votre compte DokyDoc</h1>\n\n                    <Row gutter={[16,16]}>\n                        <Col span={1}>\n                            <Badge count={1}  style={{ backgroundColor: '#001529' }} />\n                        </Col>\n                        <Col span={12} >\n                           <p>Entrez votre adresse mail ci-dessous.</p> \n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={[16,16]}>\n                        <Col span={1}>\n                            <Badge count={2}  style={{ backgroundColor: '#001529' }} />\n                        </Col>\n                        <Col span={12} >\n                           <p>Vous recevrez un mail.</p> \n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={[16,16]}>\n                        <Col span={1}>\n                            <Badge count={3}  style={{ backgroundColor: '#001529' }} />\n                        </Col>\n                        <Col span={23} >\n                           <p>Cliquez sur le lien dans le mail, vous pourrez choisir votre nouveau mot de passe.</p> \n                        </Col>\n\n                    </Row>\n\n                    <Row gutter={[16,16]}>\n                        <Col span={1}>\n                            <Badge count={4}  style={{ backgroundColor: '#001529' }} />\n                        </Col>\n                        <Col span={23} >\n                           <p>Après la validation de votre nouveau mot de passe, vous pouvez vous connecter !</p> \n                        </Col>\n\n                    </Row>\n                   \n                    \n                    <Form onFinish={this.onFinish}>\n                        <Form.Item\n                        name=\"email\"\n                        rules={[\n                            {\n                                required:true,\n                                message:\"Enter votre addresse e-mail de votre compte DokyDoc\"\n                            },\n                        ]}\n                        >\n                            <Input placeholder=\"Adresse e-mail de votre compte DokyDoc\"/>\n                        </Form.Item>\n    \n                        <Form.Item>\n                            <Button htmlType=\"submit\" block>\n                                envoyer\n                            </Button>\n                        </Form.Item>\n                    </Form>\n\n                    <h1>Je n’ai pas reçu de mail, pourquoi ?</h1>\n                    <p>La réception du mail peut se faire dans les minutes qui suivent, pensez également à vérifier vos spams. Si le problème persiste, merci de consulter notre FAQ.</p>\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default PasswordReset"]},"metadata":{},"sourceType":"module"}