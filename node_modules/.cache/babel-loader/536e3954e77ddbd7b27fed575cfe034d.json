{"ast":null,"code":"var _jsxFileName = \"/home/diop/Documents/projetSante/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { checkAuthState } from './store/actions/auth';\nimport { connect } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { BaseRoute } from './Routers';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BaseRoute, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(checkAuthState())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\nApp.propTypes = {\n  onTryAutoSignup: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/diop/Documents/projetSante/src/App.js"],"names":["React","PropTypes","checkAuthState","connect","BrowserRouter","BaseRoute","App","Component","componentDidMount","props","onTryAutoSignup","render","mapDispatchToProps","dispatch","mapStateToProps","state","isAuthenticated","auth","token","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAGA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,eAAX;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF;AAKD;;AAX+B;;AAclC,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLH,IAAAA,eAAe,EAAG,MAAMG,QAAQ,CAACX,cAAc,EAAf;AAD3B,GAAP;AAGD,CAJD;;AAMA,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACE,IAAN,CAAWC,KAAX,KAAqB;AADjC,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CAACW,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf;AAEAA,GAAG,CAACa,SAAJ,GAAgB;AACdT,EAAAA,eAAe,EAAET,SAAS,CAACmB,IAAV,CAAeC;AADlB,CAAhB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport { checkAuthState } from './store/actions/auth';\nimport { connect } from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom'\nimport { BaseRoute } from './Routers';\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.onTryAutoSignup()\n  }\n\n  render(){\n    return (\n      <BrowserRouter>\n          <BaseRoute/>\n      </BrowserRouter>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup : () => dispatch(checkAuthState())\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\nApp.propTypes = {\n  onTryAutoSignup: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}