{"ast":null,"code":"import axios from \"axios\";\nimport { authUrls } from \"../../Constants\";\n\nconst {\n  notifs\n} = require(\"./actionTypes\");\n\nexport const notifReset = () => {\n  return {\n    type: notifs.NOTIF_RESET\n  };\n};\n\nconst notifSuccess = payload => {\n  return {\n    type: notifs.NOTIF_SUCCESS,\n    payload\n  };\n};\n\nconst notifFail = error => {\n  return {\n    type: notifs.NOTIF_FAIL,\n    error\n  };\n};\n\nexport const passwordChange = (old_password, new_password1, new_password2) => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    axios.defaults.headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${user.token}`\n    };\n    axios.post(authUrls.CHANGE_PASSWORD, {\n      old_password,\n      new_password1,\n      new_password2\n    }).then(res => {\n      const payload = res.data.detail;\n      dispatch(notifSuccess(payload));\n    }).catch(err => {\n      const error = err.response.data;\n\n      if (error.old_password) {\n        dispatch(notifFail(error.old_password[0]));\n      }\n\n      if (error.new_password2) {\n        dispatch(notifFail(error.new_password2[0]));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/diop/Documents/projetSante/src/store/actions/notifs.jsx"],"names":["axios","authUrls","notifs","require","notifReset","type","NOTIF_RESET","notifSuccess","payload","NOTIF_SUCCESS","notifFail","error","NOTIF_FAIL","passwordChange","old_password","new_password1","new_password2","dispatch","user","JSON","parse","localStorage","getItem","defaults","headers","token","post","CHANGE_PASSWORD","then","res","data","detail","catch","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaC,OAAO,CAAC,eAAD,CAA1B;;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEH,MAAM,CAACI;AADV,GAAP;AAGH,CAJM;;AAMP,MAAMC,YAAY,GAAIC,OAAD,IAAa;AAC9B,SAAO;AACHH,IAAAA,IAAI,EAAEH,MAAM,CAACO,aADV;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAME,SAAS,GAAIC,KAAD,IAAW;AACzB,SAAO;AACHN,IAAAA,IAAI,EAACH,MAAM,CAACU,UADT;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD;;AAQA,OAAO,MAAME,cAAc,GAAG,CAACC,YAAD,EAAeC,aAAf,EAA8BC,aAA9B,KAAiD;AAC3E,SAAOC,QAAQ,IAAI;AACf,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAtB,IAAAA,KAAK,CAACuB,QAAN,CAAeC,OAAf,GAAyB;AACrB,sBAAiB,kBADI;AAErB,uBAAiB,SAAQN,IAAI,CAACO,KAAM;AAFf,KAAzB;AAIAzB,IAAAA,KAAK,CAAC0B,IAAN,CAAWzB,QAAQ,CAAC0B,eAApB,EAAqC;AACjCb,MAAAA,YADiC;AAEjCC,MAAAA,aAFiC;AAGjCC,MAAAA;AAHiC,KAArC,EAKCY,IALD,CAKMC,GAAG,IAAI;AACT,YAAMrB,OAAO,GAAGqB,GAAG,CAACC,IAAJ,CAASC,MAAzB;AACAd,MAAAA,QAAQ,CAACV,YAAY,CAACC,OAAD,CAAb,CAAR;AACH,KARD,EASCwB,KATD,CASOC,GAAG,IAAI;AACV,YAAMtB,KAAK,GAAGsB,GAAG,CAACC,QAAJ,CAAaJ,IAA3B;;AACA,UAAGnB,KAAK,CAACG,YAAT,EAAsB;AAClBG,QAAAA,QAAQ,CAACP,SAAS,CAACC,KAAK,CAACG,YAAN,CAAmB,CAAnB,CAAD,CAAV,CAAR;AACH;;AACD,UAAGH,KAAK,CAACK,aAAT,EAAuB;AACnBC,QAAAA,QAAQ,CAACP,SAAS,CAACC,KAAK,CAACK,aAAN,CAAoB,CAApB,CAAD,CAAV,CAAR;AACH;AAEJ,KAlBD;AAmBH,GAzBD;AA0BH,CA3BM","sourcesContent":["import axios from \"axios\"\nimport { authUrls } from \"../../Constants\"\n\nconst { notifs } = require(\"./actionTypes\")\n\n\nexport const notifReset = () => {\n    return {\n        type: notifs.NOTIF_RESET,\n    }\n}\n\nconst notifSuccess = (payload) => {\n    return {\n        type: notifs.NOTIF_SUCCESS, \n        payload\n    }\n}\n\nconst notifFail = (error) => {\n    return {\n        type:notifs.NOTIF_FAIL, \n        error\n    }\n}\n\n\nexport const passwordChange = (old_password, new_password1, new_password2 ) => {\n    return dispatch => {\n        const user = JSON.parse(localStorage.getItem('user'))\n        axios.defaults.headers = {\n            'Content-Type' : 'application/json', \n            'Authorization':`Token ${user.token}`\n        }\n        axios.post(authUrls.CHANGE_PASSWORD, {\n            old_password, \n            new_password1,\n            new_password2\n        })\n        .then(res => {\n            const payload = res.data.detail\n            dispatch(notifSuccess(payload))\n        })\n        .catch(err => {\n            const error = err.response.data\n            if(error.old_password){\n                dispatch(notifFail(error.old_password[0]))\n            }\n            if(error.new_password2){\n                dispatch(notifFail(error.new_password2[0]))\n            }\n           \n        })\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}